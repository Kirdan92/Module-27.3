{"version":3,"sources":["Comment.js","actions.js","CommentContainer.js","CommentsList.js","CommentsListContainer.js","CommentForm.js","CommentFormContainer.js","DevTools.js","App.js","comments.js","reducer.js","serviceWorker.js","index.js"],"names":["Comment","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","edit","text","handleSubmit","bind","assertThisInitialized","changeText","handleRemove","event","setState","target","value","preventDefault","editComment","id","removeComment","_this2","react_default","a","createElement","className","onClick","showEdit","onSubmit","autoFocus","onChange","type","votes","thumbUpComment","index_es","icon","faThumbsUp","thumbDownComment","faThumbsDown","React","Component","ADD_COMMENT","REMOVE_COMMENT","EDIT_COMMENT","THUMB_UP_COMMENT","THUMB_DOWN_COMMENT","addComment","uuid","v4","connect","dispatch","CommentsList","_ref","comments","map","comment","CommentContainer","assign","key","CommentForm","handleChange","rows","placeholder","createDevTools","redux_devtools_dock_monitor_lib_default","toggleVisibilityKey","changePositionKey","redux_devtools_log_monitor_lib_default","App","CommentsListContainer","CommentFormContainer","DevTools","arguments","length","undefined","action","concat","toConsumableArray","filter","objectSpread","reducer","combineReducers","users","Boolean","window","location","hostname","match","store","createStore","instrument","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b8899228.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Comment.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass Comment extends React.Component {\r\n\tconstructor(props) {\r\n  \tsuper(props);\r\n    \r\n    this.state = {\r\n    \tedit: false,\r\n    \ttext: this.props.text\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.changeText = this.changeText.bind(this);\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n  }\r\n  \r\n  changeText(event) {\r\n  \tthis.setState({text: event.target.value});\r\n  }\r\n  \r\n  showEdit() {\r\n  \tthis.setState({\r\n    \tedit: !this.state.edit\r\n    })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n\t event.preventDefault();\r\n\t this.props.editComment(this.props.id, this.state.text);\r\n  }\r\n  \r\n  handleRemove(event) {\r\n    this.props.removeComment(this.props.id);\r\n  }\r\n  render() {\r\n  \treturn (\r\n    \t<li className=\"comment\">\r\n        <span onClick={this.showEdit.bind(this)}>\r\n          {this.state.edit ? (\r\n          \t<form onSubmit={this.handleSubmit}>\r\n          \t\t<input autoFocus onChange={this.changeText} type=\"text\" value={this.state.text}/> \r\n          \t\t<button onClick={this.handleSubmit}>Ok</button>      \t\t\r\n          \t</form>\r\n          \t) : this.props.text}\r\n          \r\n        </span>\r\n        <div className=\"votes-container\">\r\n          <span>votes: {this.props.votes}</span> \r\n          <button className=\"btn-vote btn-up\" onClick={() => this.props.thumbUpComment(this.props.id)}><FontAwesomeIcon icon={faThumbsUp} /></button> \r\n          <button className=\"btn-vote btn-down\" onClick={() => this.props.thumbDownComment(this.props.id)}><FontAwesomeIcon icon={faThumbsDown} /></button>\r\n        </div>\r\n        <button className=\"btn-remove\" onClick={() => this.handleRemove()}>x</button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comment;","import uuid from 'uuid';\r\n\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\nexport const EDIT_COMMENT = 'EDIT_COMMENT';\r\nexport const THUMB_UP_COMMENT = 'THUMB_UP_COMMENT';\r\nexport const THUMB_DOWN_COMMENT = 'THUMB_DOWN_COMMENT';\r\n\r\nexport function addComment(text) {\r\n\treturn {\r\n\t\ttype: ADD_COMMENT,\r\n\t\ttext,\r\n\t\tid: uuid.v4()\r\n\t}\r\n}\r\n\r\nexport function removeComment(id) {\r\n\treturn {\r\n\t\ttype: REMOVE_COMMENT,\r\n\t\tid\r\n\t}\r\n}\r\n\r\nexport function editComment(id, text) {\r\n\treturn {\r\n\t\ttype: EDIT_COMMENT,\r\n\t\ttext,\r\n\t\tid\r\n\t}\r\n}\r\n\r\nexport function thumbUpComment(id) {\r\n\treturn {\r\n\t\ttype: THUMB_UP_COMMENT,\r\n\t\tid\r\n\t}\r\n}\r\n\r\n\r\nexport function thumbDownComment(id) {\r\n\treturn {\r\n\t\ttype: THUMB_DOWN_COMMENT,\r\n\t\tid\r\n\t}\r\n}\r\n\r\n\r\n/*const boundAddComment = text => dispatch(addComment(text));\r\nconst boundRemoveComment = id => dispatch(removeComment(id));\r\nexport const boundEditComment = (id, text) => { dispatch(editComment(id, text)) };\r\nconst boundUpComment = id => dispatch(thumbsUpComment(id));\r\nconst boundDownComment = id => dispatch(thumbsDownComment(id));\r\n*/\r\n\r\n","import {connect} from 'react-redux';\nimport Comment from './Comment';\nimport {thumbUpComment, thumbDownComment, editComment, removeComment} from './actions';\n\nconst mapDispatchToProps = dispatch => ({\n\tthumbUpComment: (id) => dispatch(thumbUpComment(id)),\n\tthumbDownComment: (id) => dispatch(thumbDownComment(id)),\n\teditComment: (id, text) => dispatch(editComment(id,text)),\n\tremoveComment: (id) => dispatch(removeComment(id))\n});\n\nexport default connect(null, mapDispatchToProps)(Comment);","import React from 'react';\r\nimport Comment from './CommentContainer';\r\nimport './CommentContainer.css';\r\n\r\nconst CommentsList = ({comments}) => <ul className=\"comments-container\">{comments.map(comment => <Comment key={comment.id} {...comment}/>)}</ul>;\r\n\r\nexport default CommentsList;","import {connect} from 'react-redux';\r\nimport CommentsList from './CommentsList';\r\n\r\nconst mapStateToProps = state => ({\r\n  comments: state.comments\r\n});\r\n\r\nexport default connect(mapStateToProps)(CommentsList);","import React from 'react';\r\nimport './CommentForm.css';\r\nclass CommentForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttext: ''\r\n\t\t};\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n    \tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\thandleChange(event) {\r\n\t\tthis.setState({text: event.target.value});\r\n\t}\r\n\r\n\thandleSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.addComment(this.state.text);\r\n\t\tthis.setState({text: ''})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"comment-form-container\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<label>Dodaj komentarz</label>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<textarea id=\"commentArea\" rows=\"5\" value={this.state.text} onChange={this.handleChange} placeholder=\"Treść komentarza\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button className=\"btn-add-comment\">Dodaj</button>\r\n\t\t\t\t\t\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CommentForm;","import {connect} from 'react-redux';\r\nimport CommentForm from './CommentForm';\r\nimport {addComment} from './actions';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\taddComment: (text) => dispatch(addComment(text))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CommentForm);","import React from 'react';\nimport { createDevTools } from 'redux-devtools';\nimport LogMonitor from 'redux-devtools-log-monitor';\nimport DockMonitor from 'redux-devtools-dock-monitor';\n\nexport default createDevTools(\n  <DockMonitor toggleVisibilityKey='ctrl-h'\n               changePositionKey='ctrl-q'>\n    <LogMonitor />\n  </DockMonitor>\n);","import React from 'react';\nimport './App.css';\n\nimport CommentsListContainer from './CommentsListContainer';\nimport CommentFormContainer from './CommentFormContainer';\nimport DevTools from './DevTools';\n\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1 className=\"main-header\">Lista komentarzy:</h1>\n      <CommentsListContainer/>\n      <CommentFormContainer/>\n      <DevTools />\n    </div>\n  );\n};\n\nexport default App;\n","import {ADD_COMMENT} from './actions'\nimport {REMOVE_COMMENT} from './actions'\nimport {EDIT_COMMENT} from './actions'\nimport {THUMB_UP_COMMENT} from './actions'\nimport {THUMB_DOWN_COMMENT} from './actions'\n\n\nfunction comments(state = [], action) {\n\tswitch(action.type) {\n\t\tcase ADD_COMMENT:\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: action.id,\n\t\t\t\t\ttext: action.text,\n\t\t\t\t\tvotes: 0\n\t\t\t\t}\n\t\t\t\t, ...state];\n\t\tcase REMOVE_COMMENT:\n\t\t\treturn state.filter(comment => comment.id !== action.id);\n\n\t\tcase EDIT_COMMENT:\n\t\t\treturn state.map(comment => {\n\t\t\t\tif (comment.id === action.id) return {...comment, text: action.text}\n\t\t\t\t\treturn comment;\n\t\t\t});\n\t\tcase THUMB_UP_COMMENT:\n\t\t\treturn state.map(comment => {\n\t\t\t\tif (comment.id === action.id) return {...comment, votes: comment.votes +1}\n\t\t\t\t\treturn comment;\n\t\t\t});\n\t\tcase THUMB_DOWN_COMMENT:\n\t\t\treturn state.map(comment => {\n\t\t\t\tif (comment.id === action.id) return {...comment, votes: comment.votes -1}\n\t\t\t\t\treturn comment;\n\t\t\t});\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n\t\n}\n\nexport default comments;","import { combineReducers } from 'redux';\r\nimport comments from './comments.js';\r\nimport users from './users.js';\r\n\r\nconst reducer = combineReducers({\r\n  comments,\r\n  users\r\n});\r\n\r\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reducer from './reducer';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nimport DevTools from './DevTools';\nimport { addComment } from './actions';\nimport * as serviceWorker from './serviceWorker';\n//import { createLogger } from 'redux-logger';\nconst store = createStore(\n\treducer,\n\tDevTools.instrument()\n\t//applyMiddleware(logger)\n);\n\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\nstore.dispatch(addComment('pierwszy komentarz'));\nstore.dispatch(addComment('drugi komentarz'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}